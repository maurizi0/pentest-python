FROM debian:bullseye-slim
ENV LANG=C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

# set RUN to bash
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Install build dependencies
RUN set -e && \
    apt-get update && apt-get install --assume-yes --no-install-recommends \
        bsdmainutils \
        build-essential \
        curl \
        dnsutils \
        file \
        git \
        inetutils-ping \
        iproute2 \
        ldap-utils \
        less \
        lib32ncurses5-dev \
        libffi-dev \
        libpoppler-cpp-dev \
        libssl-dev \
        netcat \
        nfs-common \
        nmap \
        pkg-config \
        python3 \
        python3-dev \
        python3-pip \
        python3-venv \
        rpcbind \
        traceroute \
        vim \
        wget

# impacket
RUN echo "Instaling impacket"
RUN python3 -m pip install impacket

# certipy
RUN echo "Installing certipy"
RUN mkdir -p /tools \
    && cd /tools \
    && git clone https://github.com/ly4k/Certipy certipy \
    && cd certipy \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install . \
    && deactivate \
    && echo -e '#!/bin/bash\nsource /tools/certipy/venv/bin/activate\n/tools/certipy/venv/bin/certipy "${@:1}"' > /usr/local/bin/certipy \
    && chmod +x /usr/local/bin/certipy

# Coercer
RUN echo "Installing Coercer"
RUN mkdir -p /tools \
    && cd /tools \
    && git clone https://github.com/p0dalirius/Coercer \
    && cd Coercer \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install . \
    && deactivate \
    && echo -e '#!/bin/bash\nsource /tools/Coercer/venv/bin/activate\n/tools/Coercer/Coercer.py "${@:1}"' > /usr/local/bin/coercer \
    && chmod +x /usr/local/bin/coercer

# smbcrawler
RUN echo "Installing smbcrawler"
RUN mkdir -p /tools \
    && cd /tools \
    && git clone https://github.com/SySS-Research/smbcrawler smbcrawler \
    && cd smbcrawler \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install . \
    && deactivate \
    && echo -e '#!/bin/bash\nsource /tools/smbcrawler/venv/bin/activate\n/tools/smbcrawler/venv/bin/smbcrawler "${@:1}"' > /usr/local/bin/smbcrawler \
    && chmod +x /usr/local/bin/smbcrawler

# bloodhound.py
RUN echo "Installing bloodhound.py"
RUN mkdir -p /tools \
    && cd /tools \
    && git clone https://github.com/fox-it/BloodHound.py bloodhound.py \
    && cd bloodhound.py \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install . \
    && deactivate \
    && echo -e '#!/bin/bash\nsource /tools/bloodhound.py/venv/bin/activate\n/tools/bloodhound.py/venv/bin/bloodhound-python "${@:1}"' > /usr/local/bin/bloodhound.py \
    && chmod +x /usr/local/bin/bloodhound.py

# smbmap
RUN echo "Installing smbmap"
RUN mkdir -p /tools/smbmap \
    && cd /tools/smbmap \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install smbmap \
    && echo -e '#!/bin/bash\nsource /tools/smbmap/venv/bin/activate\n/tools/smbmap/venv/bin/smbmap "${@:1}"' > /usr/local/bin/smbmap \
    && chmod +x /usr/local/bin/smbmap \
    && deactivate

# crackmapexec
RUN echo "Installing crackmapexec"
RUN mkdir -p /tools/crackmapexec \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install pipx \
    && pipx ensurepath \
    && pipx install crackmapexec --force \
    && deactivate

# sqlmap
RUN echo "Installing sqlmap"
RUN mkdir -p /tools/sqlmap \
    && cd /tools/sqlmap \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install sqlmap \
    && echo -e '#!/bin/bash\nsource /tools/sqlmap/venv/bin/activate\n/tools/sqlmap/venv/bin/sqlmap "${@:1}"' > /usr/local/bin/sqlmap \
    && chmod +x /usr/local/bin/sqlmap \
    && deactivate

# dirsearch
RUN echo "Installing dirsearch"
RUN mkdir -p /tools/ \
    && cd /tools/ \
    && git clone https://github.com/maurosoria/dirsearch.git --depth 1 \
    && cd /tools/dirsearch \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install -r requirements.txt \
    && echo -e '#!/bin/bash\nsource /tools/dirsearch/venv/bin/activate\n/tools/dirsearch/dirsearch.py "${@:1}"' > /usr/local/bin/dirsearch \
    && chmod +x /usr/local/bin/dirsearch \
    && deactivate

# pypykatz
RUN echo "Installing pypykatz"
RUN mkdir -p /tools/pypykatz \
    && cd /tools/pypykatz \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install pypykatz \
    && deactivate \
    && echo -e '#!/bin/bash\nsource /tools/pypykatz/venv/bin/activate\n/tools/pypykatz/venv/bin/pypykatz "${@:1}"' > /usr/local/bin/pypykatz \
    && chmod +x /usr/local/bin/pypykatz

# ultimate-nmap-parser
RUN echo "Installing ultimate-nmap-parser"
RUN wget https://raw.githubusercontent.com/shifty0g/ultimate-nmap-parser/master/ultimate-nmap-parser.sh -O /usr/local/bin/ultimate-nmap-parser \
    && chmod +x /usr/local/bin/ultimate-nmap-parser

# EyeWitness
RUN echo "Installing EyeWitness"
RUN mkdir -p /tools \
    && cd /tools \
    && git clone https://github.com/FortyNorthSecurity/EyeWitness \
    && cd EyeWitness/Python/setup/ \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && bash ./setup.sh \
    && deactivate \
    && echo -e '#!/bin/bash\nsource /tools/EyeWitness/Python/setup/venv/bin/activate\n/tools/EyeWitness/Python/EyeWitness.py "${@:1}"' > /usr/local/bin/eyewitness \
    && chmod +x /usr/local/bin/eyewitness

# comfortable bash
RUN echo -e "alias ls='ls --color'\n\
alias ll='ls -alFh --time-style=long-iso --color'\n\
alias l='ls -lA --color'\n\
alias rm='rm -i'\n\
alias cp='cp -i'\n\
alias mv='mv -i'\n\
alias ..='cd ..'\n\
export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]pentest-python-\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]# '\n\
" >> /root/.bashrc

CMD cd /share; bash
