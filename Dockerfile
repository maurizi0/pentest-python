FROM ubuntu:22.04
ENV LANG=C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

# set RUN to bash
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Install build dependencies
RUN set -e && \
    apt-get update && apt-get install --assume-yes --no-install-recommends \
        binwalk \
        bsdmainutils \
        build-essential \
        curl \
        dnsutils \
        exiftool \
        file \
        git \
        hashcat \
        inetutils-ping \
        iproute2 \
        john \
        jq \
        ldap-utils \
        less \
        lib32ncurses5-dev \
        libffi-dev \
        libpoppler-cpp-dev \
        libssl-dev \
        ncat \
        nfs-common \
        nmap \
        pipx \
        pkg-config \
        python3 \
        python3-dev \
        python3-pip \
        python3-venv \
        p7zip-full \
        rpcbind \
        tcpdump \
        traceroute \
        tshark \
        unzip \
        vim \
        wget \
        zip \
    && apt-get clean autoclean \
    && apt-get autoremove --yes

# impacket
RUN echo "Instaling impacket" \
    && pipx install impacket

# certipy
RUN echo "Installing certipy" \
    && pipx install git+https://github.com/ly4k/Certipy

# Coercer
RUN echo "Installing Coercer"\
    && pipx install git+https://github.com/p0dalirius/Coercer

# smbcrawler
RUN echo "Installing smbcrawler"\
    && pipx install git+https://github.com/SySS-Research/smbcrawler

# bloodhound.py
RUN echo "Installing bloodhound.py"\
    && pipx install git+https://github.com/fox-it/BloodHound.py

# crackmapexec
RUN echo "Installing crackmapexec"\
    && pipx install crackmapexec --force \
    && /root/.local/bin/cme &> /dev/null \
    || echo "CME initialized"

# sqlmap
RUN echo "Installing sqlmap"\
    && pipx install sqlmap

# dirsearch
RUN echo "Installing dirsearch"\
    && pipx install git+https://github.com/maurosoria/dirsearch.git

# volatility3
RUN echo "Installing volatility3"\
    && mkdir -p /tools/volatility3 \
    && cd /tools/volatility3/ \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install volatility3 \
    && wget https://raw.githubusercontent.com/volatilityfoundation/volatility3/develop/requirements.txt \
    && python3 -m pip install -r requirements.txt  \
    && echo -e '#!/bin/bash\nsource /tools/volatility3/venv/bin/activate\n/tools/volatility3/venv/bin/vol "${@:1}"' > /usr/local/bin/vol \
    && chmod +x /usr/local/bin/vol \
    && deactivate

# pypykatz
RUN echo "Installing pypykatz"\
    && pipx install pypykatz

# ultimate-nmap-parser
RUN echo "Installing ultimate-nmap-parser"\
    && wget https://raw.githubusercontent.com/shifty0g/ultimate-nmap-parser/master/ultimate-nmap-parser.sh -O /usr/local/bin/ultimate-nmap-parser \
    && chmod +x /usr/local/bin/ultimate-nmap-parser

# EyeWitness
RUN echo "Installing EyeWitness"\
    && mkdir -p /tools \
    && cd /tools \
    && git clone https://github.com/FortyNorthSecurity/EyeWitness \
    && cd EyeWitness/Python/setup/ \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && bash ./setup.sh \
    && deactivate \
    && echo -e '#!/bin/bash\nsource /tools/EyeWitness/Python/setup/venv/bin/activate\n/tools/EyeWitness/Python/EyeWitness.py "${@:1}"' > /usr/local/bin/eyewitness \
    && chmod +x /usr/local/bin/eyewitness

# ffuf
RUN echo "Installing ffuf"\
    && mkdir -p /tools/ffuf \
    && cd /tools/ffuf \
    && wget https://github.com/ffuf/ffuf/releases/download/v2.1.0/ffuf_2.1.0_linux_amd64.tar.gz \
    && tar -xvzf ffuf_2.1.0_linux_amd64.tar.gz \
    && rm ffuf_2.1.0_linux_amd64.tar.gz \
    && ln -s $(pwd)/ffuf /usr/local/bin/

# gobuster
RUN echo "Installing gobuster"\
    && mkdir -p /tools/gobuster \
    && cd /tools/gobuster \
    && wget https://github.com/OJ/gobuster/releases/download/v3.6.0/gobuster_Linux_x86_64.tar.gz \
    && tar -xvzf gobuster_Linux_x86_64.tar.gz \
    && rm gobuster_Linux_x86_64.tar.gz \
    && ln -s $(pwd)/gobuster /usr/local/bin/

# PKINITtools
RUN echo "Installing PKINITtools"\
    && mkdir -p /tools/ \
    && cd /tools \
    && git clone https://github.com/dirkjanm/PKINITtools \
    && cd PKINITtools \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install -r requirements.txt \
    && deactivate \
    && ls -1 *.py | xargs chmod +x \
    && ls -1 *.py --color=none | while read L; do echo -e '#!/bin/bash\nsource /tools/PKINITtools/venv/bin/activate\n/tools/PKINITtools/'"${L}"' ${@:1}\ndeactivate' > /usr/local/bin/$L; chmod +x /usr/local/bin/$L; done

# LdapRelayScan
RUN echo "Installing LdapRelayScan"\
    && mkdir -p /tools \
    && cd /tools \
    && git clone https://github.com/zyn3rgy/LdapRelayScan \
    && cd LdapRelayScan \
    && python3 -m venv venv \
    && source venv/bin/activate \
    && python3 -m pip install -r requirements_exact.txt \
    && deactivate \
    && echo -e '#!/bin/bash\nsource /tools/LdapRelayScan/venv/bin/activate\n/tools/LdapRelayScan/venv/bin/python3 /tools/LdapRelayScan/LdapRelayScan.py "${@:1}"' > /usr/local/bin/LdapRelayScan \
    && chmod +x /usr/local/bin/LdapRelayScan

# ldapdomaindump
RUN echo "Installing ldapdomaindump" \
    && pipx install git+https://github.com/dirkjanm/ldapdomaindump

# smbmap
RUN echo "Installing smbmap" \
    && pipx install git+https://github.com/ShawnDEvans/smbmap

# symlink local bin to usr local bin
RUN ln -s /root/.local/bin/* /usr/local/bin/

# comfortable bash
RUN echo -e "alias ls='ls --color'\n\
alias ll='ls -alFh --time-style=long-iso --color'\n\
alias l='ls -lA --color'\n\
alias rm='rm -i'\n\
alias cp='cp -i'\n\
alias mv='mv -i'\n\
alias ..='cd ..'\n\
export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]pentest-python-\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]# '\n\
export PATH=\"$PATH:/root/.local/bin\" \n\
" >> /root/.bashrc

WORKDIR /share
CMD cd /share; bash
